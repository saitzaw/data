services:
  spark-master:
    container_name: spark-master
    build:
      context: .
      dockerfile: docker/spark.Dockerfile
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./confs:/opt/spark/conf
      - ./spark-apps:/opt/spark/jobs
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    ports:
      - '8080:8080'
      - '7077:7077'

  spark-history-server:
    container_name: spark-history
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./confs:/opt/spark/conf
      - ./spark-apps:/opt/spark/jobs
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'

  spark-worker:
    container_name: spark-worker
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./confs:/opt/spark/conf
      - ./spark-apps:/opt/spark/jobs
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
    ports:
      - '8081:8081'

  jupyter:
    container_name: spark-jupyter
    build:
      context: .
      dockerfile: docker/jupyter.Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - spark-master
      - postgres
    volumes:
      - ./notebooks:/opt/workspace
      - ./.env:/opt/workspace/.env
      - ./spark-logs:/opt/spark-events
    environment:
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=jupyter
      - PYSPARK_DRIVER_PYTHON_OPTS=notebook --no-browser --allow-root --ip=0.0.0.0 --port=8888
      - SPARK_MASTER=spark://spark-master:7077
    
  airflow-webserver:
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    image: custom-airflow:2.9.2
    container_name: airflow-webserver
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.airflow
    volumes:
      - ./spark-logs:/opt/spark/spark-events
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./spark-apps:/opt/spark/jobs 
    ports:
      - "8088:8080"
    command: webserver
    restart: always

  airflow-scheduler:
    image: custom-airflow:2.9.2
    container_name: airflow-scheduler
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.airflow
    volumes:
      - ./spark-logs:/opt/spark/spark-events
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./spark-apps:/opt/spark/jobs 
      - ./plugins:/opt/airflow/plugins
    command: scheduler
    restart: always

  airflow-worker:
    image: custom-airflow:2.9.2
    container_name: airflow-worker
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.airflow
    volumes:
      - ./spark-logs:/opt/spark/spark-events
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./spark-apps:/opt/spark/jobs 
      - ./plugins:/opt/airflow/plugins
    command: celery worker
    restart: always

  redis:
    image: redis:latest
    container_name: airflow-redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./init-sql:/sql_scripts

volumes:
  pg_data:
  spark-logs:
  airflow-logs: